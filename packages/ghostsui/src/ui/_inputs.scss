form,
fieldset {
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 8px;
}

fieldset {
	padding: 8px 16px;
	border: 2px solid var(--background-tertiary);
	border-radius: 12px;

	legend {
		padding: 0px 8px;
	}
}

label:has(input),
label:has(select),
label:has(textarea) {
	display: block;
	text-align: left;
	margin: 8px 0px;

	&:has(input[type='radio']),
	&:has(input[type='checkbox']) {
		display: flex;
		flex-flow: row-reverse;
		align-items: center;
		justify-content: space-between;
		gap: 12px;

		margin-top: 0px;
	}

	> :not([hidden]) {
		margin-top: 8px;
	}
}

@mixin base {
	padding: 14px 16px;
	margin: none;

	font-size: 1.2rem;

	background-color: var(--background-tertiary);
	border: 4px solid var(--background-tertiary);
	border-radius: 12px;

	transition: border-color 0.2s ease-in-out;

	width: 100%;

	color: var(--text);

	&.error {
		border-color: var(--red);
	}

	&:active,
	&:focus {
		outline: none;
		border-color: var(--secondary);
	}
}

textarea {
	@include base;

	min-width: 100%;
	max-width: 100%;

	height: 150px;
	max-height: 250px;
}

input:not([type='checkbox'], [type='radio']) {
	@include base;

	&[type='color'] {
		padding: 8px;
		height: 48px;
	}
}

input,
textarea {
	&:disabled {
		cursor: not-allowed;
		opacity: 0.8;
	}
}

// Select arrow bsaed on https://css-tricks.com/styling-a-select-like-its-2019
select {
	appearance: none;
	@include base;

	font-size: 1rem;
	cursor: pointer;

	// Arrow
	background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22graytext%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E');
	background-repeat: no-repeat, repeat;
	background-position: right 0.7em top 50%, 0 0;
	background-size: 0.65em auto, 100%;

	// Support for rtl text, explicit support for Arabic and Hebrew
	*[dir='rtl'] &,
	:root:lang(ar) &,
	:root:lang(iw) & {
		background-position: left 0.7em top 50%, 0 0;
		padding: 0.6em 0.8em 0.5em 1.4em;
	}
}

// Checkbox and Radio based on https://codepen.io/aaroniker/pen/ZEYoxEY

// todo focus style with outline
input[type='checkbox'],
input[type='radio'] {
	appearance: none;

	height: 22px;
	outline: none;
	display: inline-block;
	position: relative;
	cursor: pointer;

	border: 2px solid var(--background-tertiary);

	transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out;

	&:after {
		content: '';
		display: block;
		left: 0;
		top: 0;
		position: absolute;

		transition: transform 0.3s cubic-bezier(0.2, 0.85, 0.32, 1.2),
			opacity 0.2s;
	}

	&:checked {
		background-color: var(--primary);
	}

	&:disabled {
		cursor: not-allowed;
		opacity: 0.8;
	}

	&:focus:not(&:disabled),
	&:hover:not(&:disabled),
	&:checked {
		border-color: var(--primary);
	}

	&:not(.switch) {
		width: 22px;

		&:after {
			opacity: 0;
		}

		&:checked:after {
			opacity: 1;
		}
	}
}

input[type='checkbox'] {
	margin: 0px 4px 0px 0px;

	&:not(.switch) {
		border-radius: 8px;

		&:after {
			width: 5px;
			height: 9px;
			border: 2px solid var(--text);
			border-top: 0;
			border-left: 0;
			left: 6.5px;
			top: 3.5px;
			transform: rotate(var(--rotation, 20deg));
		}

		&:checked {
			--rotation: 43deg;
		}
	}

	&.switch {
		width: 38px;
		border-radius: 12px;

		&:after {
			left: 2px;
			top: 1.5px;
			border-radius: 100%;
			width: 15px;
			height: 15px;
			background: var(--switch-colour, var(--text-grey));
			transform: translateX(var(--x, 0));
		}

		&:checked {
			--switch-colour: var(--text);
			--x: 15px;
		}

		&:disabled {
			&:not(:checked) {
				&:after {
					opacity: 0.6;
				}
			}
		}
	}
}

input[type='radio'] {
	width: 22px;
	height: 22px;
	border-radius: 100%;

	&:after {
		width: 10px;
		height: 10px;
		border-radius: 100%;
		background: var(--text);

		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}
}
